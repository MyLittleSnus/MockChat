<!DOCTYPE html>
<html>
<head>
    <title>Identity Form</title>
    <style>
        #messageBar {
            display: none;
            padding: 10px;
            background-color: #4CAF50;
            color: #fff;
            margin-top: 10px;
        }

        #errorBar {
            display: none;
            padding: 10px;
            background-color: #ff5555;
            color: #fff;
            margin-top: 10px;
        }

        #identityForm {
            display: none;
        }
    </style>
</head>
<body>
    <h2>Identity Form</h2>

    <form id="identityForm">
        <label for="username">Username:</label>
        <input type="text" id="username" name="username" required>
        
        <input type="radio" id="register" name="action" value="register" checked>
        <label for="register">Register</label>

        <input type="radio" id="login" name="action" value="login">
        <label for="login">Login</label>

        <button type="button" onclick="submitForm()">Submit</button>
    </form>

    <div id="messageBar"></div>
    <div id="errorBar"></div>

    <script>
        const userId = getCookie("userId");
        console.log(userId);
        if (userId) {
            fetch(`http://localhost:5167/api/identity/${userId}/validate`, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                }
            })
            .then(response => {
                if (response.ok) {
                    redirect("/" + String(userId) + "/chats");
                } else {
                    setCookie('userId', '', -1);
                    document.getElementById('identityForm').style.display = 'block';
                }
            })
            .catch(error => {
                console.error('Error:', error.message);
            });
        } else {
            document.getElementById('identityForm').style.display = 'block';
        }

        function submitForm() {
            const username = document.getElementById('username').value;
            const action = document.querySelector('input[name="action"]:checked').value;
            event.preventDefault();
            
            const request = {
                username: username
            };

            const url = action === 'register' 
            ? "http://localhost:5167/api/identity/register"
            : 'http://localhost:5167/api/identity/login';

            fetch(url, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(request)
            })
            .then(response => {
                if (response.ok) {
                    return response.json();
                } else if (response.status === 404) {
                    throw new Error('User not found');
                } else if (response.status === 409) {
                    throw new Error('User already exists');
                } else {
                    throw new Error('Unexpected error');
                }
            })
            .then(data => {
                console.log('Response:', data);
                console.log(data.id);
                setCookie('userId', data.id, 365);
                showMessage('Success!', false);
                redirect("/" + String(data.id) + "/chats");
            })
            .catch(error => {
                console.error('Error:', error.message);
                showMessage(error.message, true);
            });
        }

        function showMessage(message, isError) {
            const messageBar = isError
                ? document.getElementById('errorBar')
                : document.getElementById('messageBar');

            messageBar.textContent = message;
            messageBar.style.display = 'block';

            setTimeout(() => {
                messageBar.style.display = 'none';
            }, 5000);
        }

        function redirect(url) {
            window.location.href = "http://localhost:5167" + url;
        }

        function setCookie(name, value, days) {
            const expires = new Date(Date.now() + days * 24 * 60 * 60 * 1000).toUTCString();
            document.cookie = `${name}=${value}; expires=${expires}; path=/`;
        }

        function getCookie(name) {
            const value = `; ${document.cookie}`;
            const parts = value.split(`; ${name}=`);
            if (parts.length === 2) return parts.pop().split(';').shift();
        }
    </script>
</body>
</html>
